---
import { db, eq, Products, Apps } from "astro:db";
const { product } = Astro.props;
const productPath =
  "/stacked-cards/" + product.name.toLowerCase().split(" ").join("-");
const apps = await db
  .select()
  .from(Apps)
  .where(eq(Apps.productId, product.name));
---

{
  product.apps.map((app) => (
    <div class="product-app">
      <div style="display: flex; justify-content: space-between;">
        <div style="display: flex; gap: 9px">
          <forge-icon
            name={product.icon ? product.icon : "app_registration"}
            external
            id="app-icon-preview"
          />
          <h3 style="max-width: 25ch; font-weight:400">{app.name}</h3>
        </div>

        <div>
          <forge-icon-button dense>
            <button type="button">
              <forge-icon
                name="add_circle_outline"
                external
                id="app-icon-preview"
              />
            </button>
          </forge-icon-button>
        </div>
      </div>
      <div style="display: grid; align-content: center">
        <p>{app.description}</p>
      </div>
      <div style="display: flex; gap: 12px">
        <forge-chip style="" dense hasLeading>
          <forge-icon
            slot="leading"
            name={product.icon ? product.icon : "app_registration"}
            external
          />
          {product.name}
        </forge-chip>
        <forge-chip
          class={app.isAdmin ? "show" : "hide"}
          style="border-color: black; color: black"
          dense
        >
          Admin app
        </forge-chip>
      </div>
    </div>
  ))
}
<style>
  .product-app {
    padding: 10px;
    border: 1px solid #d8d8d8;
    background-color: #ffffff;
    border-radius: 6px;
    display: grid;
    gap: 12px;
    grid-template-rows: 1fr 1fr 1fr;
  }
  .product-chip {
    border-radius: 12px;
    background-color: rgba(231, 226, 226, 0.435);
    padding: 6px;
  }

  .hide {
    display: none;
  }
</style>
